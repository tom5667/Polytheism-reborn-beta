demand_gaelic_conversion_interaction_effect = {
	# Spouses convert
	scope:recipient = {
		every_spouse = {
			limit = {
				OR = {
					is_courtier_of = scope:actor
					is_courtier_of = scope:recipient
					is_vassal_of = scope:actor
					is_vassal_of = scope:recipient
				}
			}
			set_character_faith = faith:gaelic_polytheism
			hidden_effect = {
				add_character_flag = {
					flag = converted_by_forced_conversion_interaction
					years = 5
				}
			}
		}
	}
	# Family in recipient's court also convert
	if = {
		limit = {
			scope:recipient = {
				is_ruler = yes
				any_close_or_extended_family_member = {
					exists = employer
					employer = scope:recipient
					faith = scope:recipient.faith
					NOT = { faith = scope:actor.faith }
					is_ai = yes
				}	
			}	
		}
		scope:recipient = {
			every_close_or_extended_family_member = {
				custom = all_family_members_at_court
				limit = {
					exists = employer
					employer = scope:recipient
					faith = scope:recipient.faith
					NOT = { faith = scope:actor.faith }
					is_ai = yes
				}
				set_character_faith = faith:gaelic_polytheism
				hidden_effect = {
					add_character_flag = {
						flag = converted_by_forced_conversion_interaction
						years = 5
					}
				}
			}
		}
	}
	scope:recipient = {
		bastard_to_wild_oat_conversion_interaction_effect = yes
		set_character_faith = faith:gaelic_polytheism
		hidden_effect = {
			add_character_flag = {
				flag = converted_by_forced_conversion_interaction
				years = 5
			}
		}
	}
	# Struggle Catalysts.
	if = {
		limit = {
			scope:recipient = { is_important_or_vip_struggle_character = yes }
			scope:actor = {
				any_character_struggle = {
					involvement = involved
					activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
						CATALYST = catalyst_demanding_important_conversion
						CHAR = scope:recipient
					}
				}
			}
		}
		scope:actor = {
			every_character_struggle = {
				involvement = involved
				limit = {
					activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
						CATALYST = catalyst_demanding_important_conversion
						CHAR = scope:recipient
					}
				}
				activate_struggle_catalyst = {
					catalyst = catalyst_demanding_important_conversion
					character = scope:actor
				}
			}
		}
	}
}
#Brythonic
demand_brythonic_conversion_interaction_effect = {
	# Spouses convert
	scope:recipient = {
		every_spouse = {
			limit = {
				OR = {
					is_courtier_of = scope:actor
					is_courtier_of = scope:recipient
					is_vassal_of = scope:actor
					is_vassal_of = scope:recipient
				}
			}
			set_character_faith = faith:brythonic_polytheism
			hidden_effect = {
				add_character_flag = {
					flag = converted_by_forced_conversion_interaction
					years = 5
				}
			}
		}
	}
	# Family in recipient's court also convert
	if = {
		limit = {
			scope:recipient = {
				is_ruler = yes
				any_close_or_extended_family_member = {
					exists = employer
					employer = scope:recipient
					faith = scope:recipient.faith
					NOT = { faith = scope:actor.faith }
					is_ai = yes
				}	
			}	
		}
		scope:recipient = {
			every_close_or_extended_family_member = {
				custom = all_family_members_at_court
				limit = {
					exists = employer
					employer = scope:recipient
					faith = scope:recipient.faith
					NOT = { faith = scope:actor.faith }
					is_ai = yes
				}
				set_character_faith = faith:brythonic_polytheism
				hidden_effect = {
					add_character_flag = {
						flag = converted_by_forced_conversion_interaction
						years = 5
					}
				}
			}
		}
	}
	scope:recipient = {
		bastard_to_wild_oat_conversion_interaction_effect = yes
		set_character_faith = faith:brythonic_polytheism
		hidden_effect = {
			add_character_flag = {
				flag = converted_by_forced_conversion_interaction
				years = 5
			}
		}
	}
	# Struggle Catalysts.
	if = {
		limit = {
			scope:recipient = { is_important_or_vip_struggle_character = yes }
			scope:actor = {
				any_character_struggle = {
					involvement = involved
					activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
						CATALYST = catalyst_demanding_important_conversion
						CHAR = scope:recipient
					}
				}
			}
		}
		scope:actor = {
			every_character_struggle = {
				involvement = involved
				limit = {
					activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
						CATALYST = catalyst_demanding_important_conversion
						CHAR = scope:recipient
					}
				}
				activate_struggle_catalyst = {
					catalyst = catalyst_demanding_important_conversion
					character = scope:actor
				}
			}
		}
	}
}
#Gaulish
demand_gaulish_conversion_interaction_effect = {
	# Spouses convert
	scope:recipient = {
		every_spouse = {
			limit = {
				OR = {
					is_courtier_of = scope:actor
					is_courtier_of = scope:recipient
					is_vassal_of = scope:actor
					is_vassal_of = scope:recipient
				}
			}
			set_character_faith = faith:gaulish_polytheism
			hidden_effect = {
				add_character_flag = {
					flag = converted_by_forced_conversion_interaction
					years = 5
				}
			}
		}
	}
	# Family in recipient's court also convert
	if = {
		limit = {
			scope:recipient = {
				is_ruler = yes
				any_close_or_extended_family_member = {
					exists = employer
					employer = scope:recipient
					faith = scope:recipient.faith
					NOT = { faith = scope:actor.faith }
					is_ai = yes
				}	
			}	
		}
		scope:recipient = {
			every_close_or_extended_family_member = {
				custom = all_family_members_at_court
				limit = {
					exists = employer
					employer = scope:recipient
					faith = scope:recipient.faith
					NOT = { faith = scope:actor.faith }
					is_ai = yes
				}
				set_character_faith = faith:gaulish_polytheism
				hidden_effect = {
					add_character_flag = {
						flag = converted_by_forced_conversion_interaction
						years = 5
					}
				}
			}
		}
	}
	scope:recipient = {
		bastard_to_wild_oat_conversion_interaction_effect = yes
		set_character_faith = faith:gaulish_polytheism
		hidden_effect = {
			add_character_flag = {
				flag = converted_by_forced_conversion_interaction
				years = 5
			}
		}
	}
	# Struggle Catalysts.
	if = {
		limit = {
			scope:recipient = { is_important_or_vip_struggle_character = yes }
			scope:actor = {
				any_character_struggle = {
					involvement = involved
					activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
						CATALYST = catalyst_demanding_important_conversion
						CHAR = scope:recipient
					}
				}
			}
		}
		scope:actor = {
			every_character_struggle = {
				involvement = involved
				limit = {
					activate_struggle_catalyst_secondary_character_involvement_involved_trigger = {
						CATALYST = catalyst_demanding_important_conversion
						CHAR = scope:recipient
					}
				}
				activate_struggle_catalyst = {
					catalyst = catalyst_demanding_important_conversion
					character = scope:actor
				}
			}
		}
	}
}

