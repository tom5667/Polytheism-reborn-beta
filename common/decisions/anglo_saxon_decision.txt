#Patron deity decision from vanilla game, override: removed needing the personal deity doctrine 
select_personal_deity_germanic_decision = {
	picture = "gfx/interface/illustrations/decisions/fp1_decisons_hold_bolt.dds"

	desc = select_personal_deity_germanic_decision_desc
	selection_tooltip = select_personal_deity_germanic_decision_tooltip

	is_shown = {
		# DLC check.
		has_fp1_dlc_trigger = yes
		# Following a valid religion & faith.
		religion = religion:germanic_religion
		#faith = { has_doctrine_parameter = select_personal_god_active }
	}

	is_valid = {
	}

	is_valid_showing_failures_only = {
		# Have to at _least_ not be in piety debt.
		piety >= 0
	}

	cooldown = { years = 2 }

	effect = {
		if={
			limit={
				faith = faith:norse_pagan
			}
			# Show the possible options.
			show_as_tooltip = {
				random_list = {
					desc = select_personal_deity_germanic_decision_tt
					100 = {
						show_chance = no
						desc = select_personal_deity_germanic_decision.select_odin
						add_character_modifier = bhakti_germanic_generic_odin
					}
					100 = {
						trigger = { is_vaguely_danish_bhakti_trigger = no }
						show_chance = no
						desc = select_personal_deity_germanic_decision.select_ullr
						add_character_modifier = bhakti_germanic_not_danish_ullr
					}
					100 = {
						trigger = { is_vaguely_danish_bhakti_trigger = yes }
						show_chance = no
						desc = select_personal_deity_germanic_decision.select_tyr
						add_character_modifier = bhakti_germanic_danish_tyr
					}
					100 = {
						show_chance = no
						desc = select_personal_deity_germanic_decision.select_thor
						add_character_modifier = bhakti_germanic_generic_thor
					}
					100 = {
						show_chance = no
						desc = select_personal_deity_germanic_decision.select_freyr
						add_character_modifier = bhakti_germanic_generic_freyr
					}
				}
			}
		# And the actual effect.
		trigger_event = religious_decision.0102
		}
		else_if ={
			limit={
				faith = faith:anglo_saxon_polytheism
			}
				# Show the possible options.
				show_as_tooltip = {
					random_list = {
						desc = select_personal_deity_germanic_decision_tt
						100 = {
							show_chance = no
							desc = select_personal_deity_germanic_decision.select_woden
							add_character_modifier = anglo_saxon_woden
						}
						100 = {
							show_chance = no
							desc = select_personal_deity_germanic_decision.select_fri
							add_character_modifier = anglo_saxon_fri
						}
						100 = {
							show_chance = no
							desc = select_personal_deity_germanic_decision.select_njord
							add_character_modifier = anglo_saxon_njord
						}
						100 = {
							show_chance = no
							desc = select_personal_deity_germanic_decision.select_tiwaz
							add_character_modifier = anglo_saxon_tiwaz
						}
						100 = {
							show_chance = no
							desc = select_personal_deity_germanic_decision.select_seaxneat
							add_character_modifier = anglo_saxon_seaxneat
						}
					}
				}
			trigger_event = ascmd.001
		}
		else_if ={
			limit = {
				faith = faith:german_polytheism
			}
							# Show the possible options.
							show_as_tooltip = {
								random_list = {
									desc = select_personal_deity_germanic_decision_tt
									100 = {
										show_chance = no
										desc = select_personal_deity_germanic_decision.select_wotan
										add_character_modifier = german_wotan
										}
									100 = {
										show_chance = no
										desc = select_personal_deity_germanic_decision.select_freyr
										add_character_modifier = german_freyr
									}
									100 = {
										show_chance = no
										desc = select_personal_deity_germanic_decision.select_njordr
										add_character_modifier = german_njordr
									}
									100 = {
										show_chance = no
										desc = select_personal_deity_germanic_decision.select_nornir
										add_character_modifier = german_nornir
									}
									100 = {
										show_chance = no
										desc = select_personal_deity_germanic_decision.select_mimir
										add_character_modifier = german_mimir
									}
								}
							}
			trigger_event = ascmd.002
		}

	}

	ai_check_interval = 96
	
	ai_potential = {
		piety >= minor_piety_value
		NOR = {
			has_character_modifier = bhakti_germanic_generic_odin
			has_character_modifier = bhakti_germanic_not_danish_ullr
			has_character_modifier = bhakti_germanic_danish_tyr
			has_character_modifier = bhakti_germanic_generic_thor
			has_character_modifier = bhakti_germanic_generic_freyr
			has_character_modifier = anglo_saxon_woden
			has_character_modifier = anglo_saxon_fri
			has_character_modifier = anglo_saxon_njord
			has_character_modifier = anglo_saxon_tiwaz
			has_character_modifier = anglo_saxon_seaxneat
			has_character_modifier = german_freyr
			has_character_modifier = german_njordr
			has_character_modifier = german_nornir
			has_character_modifier = german_mimir

		}
	}

	ai_will_do = {
		base = 100
	}
}

 #Solstice's winter and summer decision 
#For game play 21 days to use the decision
#Winter 1-12 - 21-12 
#Summer 1-6  - 21 - 6 
solstice_winter_decision = {
	picture = "gfx/interface/illustrations/decisions/germanic_solstice.dds"
	desc = solstice_winter_decision_desc
	selection_tooltip = solstice_winter_decision_tooltip
	is_shown ={
			time_of_year = {
				min = 12.1
				max = 12.21
			}
		AND = {
			religion = religion:germanic_religion
		}
	}
	
	valid = {

	}
	cooldown = { months = 11 }
	cost = {
		gold = feast_activity_cost
	}

	effect = {
		trigger_event = solstice.001
		capital_province = {
			spawn_activity = {
				type = activity_feast
				owner = root
				#days = 2
			}
		}
		custom_tooltip = host_feast_decision_desc_vassals
		if = {
			limit = {
				is_independent_ruler = no
			}
			custom_tooltip = host_feast_decision_desc_liege_opinion
		}
		if = {
			limit = {
				employs_court_position = court_musician_court_position
				any_court_position_holder = {
			        type = court_musician_court_position
			        is_physically_able = yes
			    }
			}
			custom_tooltip = host_feast_decision_desc_court_musician_opinion
		}

		#Piety gain
		if = {
			limit = {
				faith = {
					OR = {
						has_doctrine_parameter = piety_from_feasts_active
						AND = {
							has_doctrine_parameter = summer_festivals_active
							# Only during 'summer' (May 1st through July 31st).
							current_month >= 5
							current_month <= 7
						}
					}
				}
			}
			add_piety = {
				value = 0

				faith = {
					if = {
						limit = {
							has_doctrine_parameter = summer_festivals_active
							# Only during 'summer' (May 1st through July 31st).
							current_month >= 5
							current_month <= 7
						}
						add = major_piety_value
					}
					if = {
						limit = {
							has_doctrine = tenet_ritual_celebrations
						}
						add = medium_piety_value
					}
					if = {
						limit = {
							has_doctrine = tenet_hedonistic
						}
						add = medium_piety_value
					}
				}
				if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 5 }
					}
					multiply = 2.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 4 }
					}
					multiply = 2
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 3 }
					}
					multiply = 1.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 2 }
					}
					multiply = 1
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value <= 1 }
					}
					multiply = 0.5
				}

				min = medium_piety_value # Always give some piety, even if we don't have any of the specified tenets.
			}
		}

		#Prestige gain from Tradition or Struggle
		if = {
			limit = {
				OR = {
					culture = {
						has_cultural_parameter = refined_feasts
					}
					any_character_struggle = {
						involvement = involved
						is_struggle_type = iberian_struggle
						has_struggle_phase_parameter = struggle_prestige_from_feast
					}
				}
			}
			add_prestige = {
				value = medium_prestige_value
				if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 5 }
					}
					multiply = 2.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 4 }
					}
					multiply = 2
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 3 }
					}
					multiply = 1.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 2 }
					}
					multiply = 1
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value <= 1 }
					}
					multiply = 0.5
				}
				if = {
					limit = {
						any_character_struggle = {
							involvement = involved
							is_struggle_type = iberian_struggle
							has_struggle_phase_parameter = struggle_prestige_from_feast
						}
					}
					multiply = 1.25
				}
			}
		}

		#Stress loss
		if = {
			limit = {
				OR = {
					has_trait = shy
				}
			}
			custom_tooltip = host_feast_decision_desc_shy
		}
		else = {
			if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 5 }
				}
				stress_impact = {
					base = exotic_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 4 }
				}
				stress_impact = {
					base = lavish_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 3 }
				}
				stress_impact = {
					base = medium_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value <= 1 }
				}
				stress_impact = {
					base = meager_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else = {
				stress_impact = {
					base = feast_stress_loss_value
					gluttonous = activity_stress_loss_impact
					gregarious = activity_stress_loss_impact
					reveler_1 = activity_stress_loss_impact
					reveler_2 = activity_stress_loss_impact
					reveler_3 = activity_stress_loss_impact
					drunkard = activity_stress_loss_impact
					comfort_eater = activity_stress_loss_impact
					generous = activity_stress_loss_impact
					greedy = activity_stress_gain_impact
				}
			}
		}
		if = {
			limit = { exists = var:protected_alcohol_stores }
			set_variable = {
				name = protected_alcohol_stores
				value = 0
			}
		}
	}

	ai_potential = {
		short_term_gold > standard_activity_cost
		NOT = {
			has_trait = reclusive
		}
	}

	ai_will_do = {
		base = 35

		ai_value_modifier = {
			ai_sociability = 1
			ai_greed = -0.5
		}

		modifier = {
			add = 30 # Has Greed of 20, so this is only (-10 + 30 = +20)
			has_trait = gluttonous
		}
		modifier = {
			add = 12.5 # Has Greed of 5, so this is only (-2.5 + 12.5 = +10)
			has_trait = comfort_eater
		}
		modifier = {
			add = 47.5 # Has Greed of 75, so this is only (-37.5 + 45 = +10)
			has_trait = ambitious
		}

		modifier = {
			add = 35
			stress > low_stress
		}

		modifier = {
			add = 35
			faith = {
				has_doctrine = tenet_ritual_celebrations
			}
		}

		modifier = {
			add = 35
			faith = {
				has_doctrine = tenet_hedonistic
			}
		}
		
		modifier = {
			any_character_struggle = {
				involvement = involved
				phase_has_catalyst = catalyst_invite_diff_faith_culture_to_feast
			}
			add = {
				value = 0
				if = {
					limit = {
						has_character_flag = agenda_towards_escalation
					}
					add = -25
				}
				else_if = {
					limit = {
						has_character_flag = agenda_towards_deescalation
					}
					add = 50
				}
			}
		}
	}
}

solstice_summer_decision ={
	picture = "gfx/interface/illustrations/decisions/germanic_solstice.dds"
	desc = solstice_summer_decision_desc
	selection_tooltip = solstice_summer_decision_tooltip
	is_shown = {
		time_of_year = {
			min = 6.1
			max = 6.21
		}
		AND = {
			religion = religion:germanic_religion
		}
	} 
	cost = {
		gold = feast_activity_cost
	}

	valid ={

	}
	cooldown = { months = 11 }
	effect = {
		trigger_event = solstice.002
		capital_province = {
			spawn_activity = {
				type = activity_feast
				owner = root
				#days = 2
			}
		}
		custom_tooltip = host_feast_decision_desc_vassals
		if = {
			limit = {
				is_independent_ruler = no
			}
			custom_tooltip = host_feast_decision_desc_liege_opinion
		}
		if = {
			limit = {
				employs_court_position = court_musician_court_position
				any_court_position_holder = {
			        type = court_musician_court_position
			        is_physically_able = yes
			    }
			}
			custom_tooltip = host_feast_decision_desc_court_musician_opinion
		}

		#Piety gain
		if = {
			limit = {
				faith = {
					OR = {
						has_doctrine_parameter = piety_from_feasts_active
						AND = {
							has_doctrine_parameter = summer_festivals_active
							# Only during 'summer' (May 1st through July 31st).
							current_month >= 5
							current_month <= 7
						}
					}
				}
			}
			add_piety = {
				value = 0

				faith = {
					if = {
						limit = {
							has_doctrine_parameter = summer_festivals_active
							# Only during 'summer' (May 1st through July 31st).
							current_month >= 5
							current_month <= 7
						}
						add = major_piety_value
					}
					if = {
						limit = {
							has_doctrine = tenet_ritual_celebrations
						}
						add = medium_piety_value
					}
					if = {
						limit = {
							has_doctrine = tenet_hedonistic
						}
						add = medium_piety_value
					}
				}
				if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 5 }
					}
					multiply = 2.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 4 }
					}
					multiply = 2
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 3 }
					}
					multiply = 1.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 2 }
					}
					multiply = 1
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value <= 1 }
					}
					multiply = 0.5
				}

				min = medium_piety_value # Always give some piety, even if we don't have any of the specified tenets.
			}
		}

		#Prestige gain from Tradition or Struggle
		if = {
			limit = {
				OR = {
					culture = {
						has_cultural_parameter = refined_feasts
					}
					any_character_struggle = {
						involvement = involved
						is_struggle_type = iberian_struggle
						has_struggle_phase_parameter = struggle_prestige_from_feast
					}
				}
			}
			add_prestige = {
				value = medium_prestige_value
				if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 5 }
					}
					multiply = 2.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 4 }
					}
					multiply = 2
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 3 }
					}
					multiply = 1.5
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value >= 2 }
					}
					multiply = 1
				}
				else_if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value <= 1 }
					}
					multiply = 0.5
				}
				if = {
					limit = {
						any_character_struggle = {
							involvement = involved
							is_struggle_type = iberian_struggle
							has_struggle_phase_parameter = struggle_prestige_from_feast
						}
					}
					multiply = 1.25
				}
			}
		}

		#Stress loss
		if = {
			limit = {
				OR = {
					has_trait = shy
				}
			}
			custom_tooltip = host_feast_decision_desc_shy
		}
		else = {
			if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 5 }
				}
				stress_impact = {
					base = exotic_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 4 }
				}
				stress_impact = {
					base = lavish_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 3 }
				}
				stress_impact = {
					base = medium_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value <= 1 }
				}
				stress_impact = {
					base = meager_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else = {
				stress_impact = {
					base = feast_stress_loss_value
					gluttonous = activity_stress_loss_impact
					gregarious = activity_stress_loss_impact
					reveler_1 = activity_stress_loss_impact
					reveler_2 = activity_stress_loss_impact
					reveler_3 = activity_stress_loss_impact
					drunkard = activity_stress_loss_impact
					comfort_eater = activity_stress_loss_impact
					generous = activity_stress_loss_impact
					greedy = activity_stress_gain_impact
				}
			}
		}
		if = {
			limit = { exists = var:protected_alcohol_stores }
			set_variable = {
				name = protected_alcohol_stores
				value = 0
			}
		}
	}

	ai_potential = {
		short_term_gold > standard_activity_cost
		NOT = {
			has_trait = reclusive
		}
	}

	ai_will_do = {
		base = 35

		ai_value_modifier = {
			ai_sociability = 1
			ai_greed = -0.5
		}

		modifier = {
			add = 30 # Has Greed of 20, so this is only (-10 + 30 = +20)
			has_trait = gluttonous
		}
		modifier = {
			add = 12.5 # Has Greed of 5, so this is only (-2.5 + 12.5 = +10)
			has_trait = comfort_eater
		}
		modifier = {
			add = 47.5 # Has Greed of 75, so this is only (-37.5 + 45 = +10)
			has_trait = ambitious
		}

		modifier = {
			add = 35
			stress > low_stress
		}

		modifier = {
			add = 35
			faith = {
				has_doctrine = tenet_ritual_celebrations
			}
		}

		modifier = {
			add = 35
			faith = {
				has_doctrine = tenet_hedonistic
			}
		}
		
		modifier = {
			any_character_struggle = {
				involvement = involved
				phase_has_catalyst = catalyst_invite_diff_faith_culture_to_feast
			}
			add = {
				value = 0
				if = {
					limit = {
						has_character_flag = agenda_towards_escalation
					}
					add = -25
				}
				else_if = {
					limit = {
						has_character_flag = agenda_towards_deescalation
					}
					add = 50
				}
			}
		}
	}
}